{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAKjC,SAASI,EAAcC,EAAUJ,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GAWtC,OATgB,IAAIC,SAAS,CAACC,EAASC,KACrCC,YAAY,KACNN,EACFI,EAAQ,C,SAACL,E,MAAUJ,IAEnBU,EAAO,C,SAACN,E,MAAUJ,GAAO,GAE1BA,EAAM,G,CAKb,SAASY,EAAUR,EAAUJ,GAC3BN,EAAAmB,OAAOC,QAAQ,uBAAqBV,QAAiBJ,M,CAGvD,SAASe,EAASX,EAAUJ,GAC1BN,EAAAmB,OAAOG,QAAQ,sBAAoBZ,QAAeJ,M,CAtBpDiB,QAAQC,IAAItB,GA0BZA,EAAKC,KAAKsB,iBAAiB,UAE3B,SAAuBC,GACrBA,EAAMC,iBAEN,IAAIrB,EAAQsB,OAAO1B,EAAKI,MAAMuB,OAC9B,MAAMtB,EAAOqB,OAAO1B,EAAKK,KAAKsB,OACxBrB,EAASoB,OAAO1B,EAAKM,OAAOqB,OAElCN,QAAQC,IAAIlB,EAAOC,EAAMC,GACzB,IAAK,IAAIsB,EAAI,EAAGA,EAAItB,EAAQsB,GAAK,EAC/BrB,EAAcqB,EAAGxB,GAAOyB,KAAKb,EAASY,EAAE,EAAExB,IAAQ0B,MAAMX,EAAQS,EAAE,EAAExB,IACpEA,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import {Notify} from 'notiflix/build/notiflix-notify-aio';\n\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\nconsole.log(refs);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise( (resolve, reject) => {\n    setTimeout (() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay)\n  })\n  return promise;\n}\n\nfunction onSucces (position, delay) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n}\n\nfunction onError (position, delay) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n}\n\n\nrefs.form.addEventListener('submit', onSubmitForm)\n\nfunction onSubmitForm (event) {\n  event.preventDefault();    \n\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  console.log(delay, step, amount);\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i, delay).then(onSucces(i+1,delay)).catch(onError(i+1,delay));  \n    delay += step;\n  }\n\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$onSucces","Notify","success","$47d4ff9957288465$var$onError","failure","console","log","addEventListener","event","preventDefault","Number","value","i","then","catch"],"version":3,"file":"03-promises.f47f49d0.js.map"}