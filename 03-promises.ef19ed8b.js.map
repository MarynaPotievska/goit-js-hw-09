{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAIMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAKjC,SAASI,EAAcC,EAAUJ,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GAWtC,OATgB,IAAIC,SAAS,SAACC,EAASC,GACrCC,YAAY,WACNN,EACFI,EAAQ,CAACL,WAAUJ,UAEnBU,EAAO,CAACN,WAAUJ,S,GAEnBA,E,IAKP,SAASY,EAAUC,G,IAACT,EAADS,EAACT,SAAUJ,EAAXa,EAAWb,MAC5BN,EAAAoB,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANhB,EAAM,M,CAG/D,SAASiB,EAASJ,G,IAACT,EAADS,EAACT,SAAUJ,EAAXa,EAAWb,MAC3BN,EAAAoB,OAAOI,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANhB,EAAM,M,CAtB5DmB,QAAQC,IAAIxB,GA0BZA,EAAKC,KAAKwB,iBAAiB,UAE3B,SAAuBC,GACrBA,EAAMC,iBAMN,IAJA,IAAIvB,EAAQwB,OAAO5B,EAAKI,MAAMyB,OACxBxB,EAAOuB,OAAO5B,EAAKK,KAAKwB,OACxBvB,EAASsB,OAAO5B,EAAKM,OAAOuB,OAEzBC,EAAI,EAAGA,GAAKxB,EAAQwB,GAAK,EAChCvB,EAAcuB,EAAG1B,GAAO2B,KAAKf,GAAUgB,MAAMX,GAC7CjB,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import {Notify} from 'notiflix/build/notiflix-notify-aio';\n\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\nconsole.log(refs);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise( (resolve, reject) => {\n    setTimeout (() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay)\n  })\n  return promise;\n}\n\nfunction onSucces ({position, delay}) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n}\n\nfunction onError ({position, delay}) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n}\n\n\nrefs.form.addEventListener('submit', onSubmitForm)\n\nfunction onSubmitForm (event) {\n  event.preventDefault();    \n\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay).then(onSucces).catch(onError);  \n    delay += step;\n  }\n\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$onSucces","param","Notify","success","concat","$ce04d3a99e08e73b$var$onError","failure","console","log","addEventListener","event","preventDefault","Number","value","i","then","catch"],"version":3,"file":"03-promises.ef19ed8b.js.map"}